name: "Smoke test manifests"
on:
  pull_request:
  push:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: false
jobs:
  validate_manifests:
    runs-on: ubuntu-latest
    steps:

    # Setup
    - uses: actions/checkout@v2.3.4

    - uses: cachix/install-nix-action@v13
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/8e4fe32876ca15e3d5eb3ecd3ca0b224417f5f17.tar.gz

    - name: Install dependencies in environment
      run: nix-env -if default.nix

    # Tests
    - name: Smoke test parent chart
      run: |-
        for base in $(find base -mindepth 1 -maxdepth 1 -type d); do
          kustomize build "$base" | kubeval --strict;
        done

  deploy_mojaloop:
    needs: validate_manifests
    timeout-minutes: 20
    runs-on: ubuntu-20.04
    steps:

    # Enable tmate debugging of manually-triggered workflows if the input option was provided
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}

    # Env setup
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v13
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/8e4fe32876ca15e3d5eb3ecd3ca0b224417f5f17.tar.gz

    - name: Install dependencies in environment
      run: nix-env -if default.nix
    - name: Checkout repository
      uses: actions/checkout@v2

    # Cluster setup
    - name: Start cluster
      run: |-
        k3d cluster create \
          --kubeconfig-update-default \
          --kubeconfig-switch-context \
          --image=rancher/k3s:v1.21.0-k3s1 \
          int-test

    - name: Deploy
      run: skaffold run

    - name: Print docker containers to check any issues with the cluster
      if: ${{ always() }}
      run: docker ps

    - name: Print resources
      if: ${{ always() }}
      run: kubectl get svc,deploy,sts,pv,pvc,configmap,job,pod -A

    - name: Describe resources
      if: ${{ always() }}
      run: kubectl describe svc,deploy,sts,pv,pvc,configmap,job,pod -A

    - name: Print secret values
      if: ${{ always() }}
      run: kubectl get secrets -o json | jq -r '.items[] | { name: .metadata.name, data: .data | map_values(@base64d) }'

