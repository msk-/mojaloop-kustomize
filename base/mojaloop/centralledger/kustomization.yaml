commonLabels:
  app.kubernetes.io/part-of: mojaloop
resources:
  - ../../kafka
  - ./centralledger-mysql
  - ../../centralledger
  # - ../quoting-service
  # - ../ml-api-adapter

#######################
#### CENTRALLEDGER ####
#######################
# TODO: split into separate files?

configMapGenerator:
  - name: mysql
    behavior: merge
    literals:
      - MYSQL_DATABASE=central_ledger
      - MYSQL_USER=central_ledger
  # TODO: it should be possible to reference the kafka base here. Perhaps modifying every
  # deployment to have environment variables using k8s variable replacement functionality:
  # - name: KAFKA_SVC
  #   value: kafka
  # - name: KAFKA_PORT
  #   value: 9092
  # - name: CLEDG_KAFKA__CONSUMER__ADMIN__TRANSFER__config__rdkafkaConf__metadata
  #   value: $(KAFKA_SVC):$(KAFKA_PORT)
  # I'm unsure, but it may also be possible to use the valueAddTransformer.
  - name: centralledger-kafka
    literals:
      - CLEDG_KAFKA__CONSUMER__TRANSFER__PREPARE__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__PRODUCER__TRANSFER__PREPARE__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__CONSUMER__TRANSFER__POSITION__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__PRODUCER__TRANSFER__POSITION__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__CONSUMER__BULK__GET__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__CONSUMER__BULK__PREPARE__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__CONSUMER__BULK__PROCESSING__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__CONSUMER__BULK__FULFIL__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__PRODUCER__BULK__PROCESSING__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__CONSUMER__TRANSFER__GET__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__CONSUMER__TRANSFER__FULFIL__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__PRODUCER__TRANSFER__FULFIL__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__CONSUMER__ADMIN__TRANSFER__config__rdkafkaConf__metadata.broker.list=kafka:9092
      - CLEDG_KAFKA__PRODUCER__ADMIN__TRANSFER__config__rdkafkaConf__metadata.broker.list=kafka:9092

secretGenerator:
  - name: mysql
    behavior: merge
    literals:
      - MYSQL_PASSWORD=oyMxgZChuu
      - MYSQL_ROOT_PASSWORD=2dMJTrx8y9
      - XTRABACKUP_PASSWORD=4WHuZ4xTLq

patches:
  - target:
      kind: Deployment
      name: centralledger-service
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ignored-by-kustomize
      spec:
        template:
          spec:
            containers:
              - name: centralledger-service
                env: &db_env
                  - name: CLEDG_DATABASE__SCHEMA
                    valueFrom:
                      configMapKeyRef:
                        name: mysql
                        key: MYSQL_DATABASE
                  - name: CLEDG_DATABASE__USER
                    valueFrom:
                      configMapKeyRef:
                        name: mysql
                        key: MYSQL_USER
                  - name: CLEDG_DATABASE__HOST
                    valueFrom:
                      configMapKeyRef:
                        name: mysql
                        key: MYSQL_SERVICE
                  - name: CLEDG_DATABASE__PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: mysql
                        key: MYSQL_PASSWORD
                envFrom:
                  - configMapRef:
                      name: centralledger-kafka
            initContainers:
              - name: wait-for-mysql
                env: *db_env
              - name: run-migration
                env: *db_env
  - target:
      kind: Deployment
      name: centralledger-handler-.*
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ignored-by-kustomize
      spec:
        template:
          spec:
            containers:
              - name: handler
                envFrom:
                  - configMapRef:
                      name: centralledger-kafka
                env:
                  - name: CLEDG_DATABASE__SCHEMA
                    valueFrom:
                      configMapKeyRef:
                        name: mysql
                        key: MYSQL_DATABASE
                  - name: CLEDG_DATABASE__USER
                    valueFrom:
                      configMapKeyRef:
                        name: mysql
                        key: MYSQL_USER
                  - name: CLEDG_DATABASE__HOST
                    valueFrom:
                      configMapKeyRef:
                        name: mysql
                        key: MYSQL_SERVICE
                  - name: CLEDG_DATABASE__PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: mysql
                        key: MYSQL_PASSWORD
            # TODO: apply wait-for-mysql and wait-for-kafka to all relevant images with a patch as
            #       follows. This also means removing them from the bases. Additionally, use the
            #       relevant MySQL and Kafka configmaps.
            # initContainers:
            #   - name: wait-for-mysql
            #     command:
            #     - sh
            #     - -c
            #     - until result=$(mysql -h cl-mysql -P 3306 -u $(MYSQL_USER)
            #       --password=$(MYSQL_PASSWORD)  $(MYSQL_DATABASE) -ss -N -e 'select is_locked from
            #       migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result
            #       ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting
            #       for MySQL; sleep 2; done;
            #     image: mysql:latest
            #     imagePullPolicy: Always
            #     envFrom:
            #       - configMapRef:
            #           name: mysql
            #       - secretRef:
            #           name: mysql
            #   - command:
            #     - sh
            #     - -c
            #     - until ./bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9092;
            #       do echo waiting for Kafka; sleep 2; done;
            #     image: solsson/kafka:latest
            #     imagePullPolicy: Always
            #     name: wait-for-kafka
