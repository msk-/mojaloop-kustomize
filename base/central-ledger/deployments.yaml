apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: centralledger-service
spec:
  # TODO: is progressDeadlineSeconds: 600 default?
  progressDeadlineSeconds: 600
  # TODO: is this strategy default? Should we instead use default, given there was a bug with
  # this?
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    spec:
      containers:
      - command:
        - node
        - src/api/index.js
        env:
        - name: LOG_LEVEL
          value: info
        - name: LOG_FILTER
          value: error, warn, info
        - name: CSL_LOG_TRANSPORT
          value: file
        - name: EVENT_SDK_LOG_FILTER
          value: audit:*, log:warn, log:error
        - name: EVENT_SDK_LOG_METADATA_ONLY
          value: "false"
        - name: EVENT_SDK_VENDOR_PREFIX
          value: mojaloop
        - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
          value: "true"
        - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
          value: log,trace
        - name: EVENT_SDK_TRACEID_PER_VENDOR
          value: "false"
        image: mojaloop/central-ledger:v9.5.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 15
        name: centralledger-service
        ports:
        - containerPort: 3001
          name: http-api
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 15
        volumeMounts:
        - mountPath: /opt/central-ledger/config
          name: centralledger-service-config-volume
      initContainers:
      - command:
        - sh
        - -c
        - until mysql -h centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger   -e
          'select version()' ; do echo waiting for MySQL; sleep 2; done;
        image: mysql:latest
        imagePullPolicy: Always
        name: wait-for-mysql
      - command:
        - sh
        - -c
        - npm run migrate
        env:
        - name: CLEDG_MIGRATIONS__RUN_DATA_MIGRATIONS
          value: "true"
        image: mojaloop/central-ledger:v9.5.0
        imagePullPolicy: Always
        name: run-migration
        volumeMounts:
        - mountPath: /opt/central-ledger/config
          name: centralledger-service-config-volume
      restartPolicy: Always
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: default.json
            path: default.json
          - key: knexfile.js
            path: knexfile.js
          name: centralledger-service-config
        name: centralledger-service-config-volume
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: centralledger-handler-admin-transfer
spec:
  progressDeadlineSeconds: 600
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    spec:
      containers:
      - command:
        - node
        - src/handlers/index.js
        - handler
        - --admin
        env:
        - name: LOG_LEVEL
          value: info
        - name: LOG_FILTER
          value: error, warn, info
        - name: CSL_LOG_TRANSPORT
          value: file
        - name: EVENT_SDK_LOG_FILTER
          value: audit:*, log:warn, log:error
        - name: EVENT_SDK_LOG_METADATA_ONLY
          value: "false"
        - name: EVENT_SDK_VENDOR_PREFIX
          value: mojaloop
        - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
          value: "true"
        - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
          value: log,trace
        - name: EVENT_SDK_TRACEID_PER_VENDOR
          value: "false"
        image: mojaloop/central-ledger:v9.5.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 15
        name: centralledger-handler-admin-transfer
        ports:
        - containerPort: 3001
          name: http-api
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 15
        volumeMounts:
        - mountPath: /opt/central-ledger/config
          name: centralledger-handler-admin-transfer-config-volume
      initContainers:
      - command:
        - sh
        - -c
        - until result=$(mysql -h centralledger-mysql -P 3306 -u central_ledger
          --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from
          migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result
          ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting
          for MySQL; sleep 2; done;
        image: mysql:latest
        imagePullPolicy: Always
        name: wait-for-mysql
      - command:
        - sh
        - -c
        - until ./bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9092;
          do echo waiting for Kafka; sleep 2; done;
        image: solsson/kafka:latest
        imagePullPolicy: Always
        name: wait-for-kafka
      restartPolicy: Always
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: default.json
            path: default.json
          - key: knexfile.js
            path: knexfile.js
          name: centralledger-handler-admin-transfer-config
        name: centralledger-handler-admin-transfer-config-volume
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: centralledger-handler-timeout
spec:
  progressDeadlineSeconds: 600
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    spec:
      containers:
      - command:
        - node
        - src/handlers/index.js
        - handler
        - --timeout
        env:
        - name: LOG_LEVEL
          value: info
        - name: LOG_FILTER
          value: error, warn, info
        - name: CSL_LOG_TRANSPORT
          value: file
        - name: EVENT_SDK_LOG_FILTER
          value: audit:*, log:warn, log:error
        - name: EVENT_SDK_LOG_METADATA_ONLY
          value: "false"
        - name: EVENT_SDK_SIDECAR_DISABLED
          value: "false"
        - name: EVENT_SDK_SERVER_HOST
          value: localhost
        - name: EVENT_SDK_SERVER_PORT
          value: "50051"
        - name: EVENT_SDK_VENDOR_PREFIX
          value: mojaloop
        - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
          value: "true"
        - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
          value: log,trace
        - name: EVENT_SDK_TRACEID_PER_VENDOR
          value: "false"
        image: mojaloop/central-ledger:v9.5.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 15
        name: centralledger-handler-timeout
        ports:
        - containerPort: 3001
          name: http-api
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 15
        volumeMounts:
        - mountPath: /opt/central-ledger/config
          name: centralledger-handler-timeout-config-volume
      - command:
        - npm
        - run
        - start
        env:
        - name: LOG_LEVEL
          value: info
        - name: LOG_FILTER
          value: error, warn, info
        - name: EVENT_SDK_LOG_FILTER
          value: audit:*, log:info, log:warn, log:error
        - name: EVENT_SDK_LOG_METADATA_ONLY
          value: "true"
        image: mojaloop/event-sidecar:v9.3.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 4001
            scheme: HTTP
          initialDelaySeconds: 90
          periodSeconds: 15
        name: centralledger-handler-timeout-sidecar
        ports:
        - containerPort: 4001
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: 4001
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 15
        volumeMounts:
        - mountPath: /opt/event-sidecar/config
          name: centralledger-handler-timeout-sidecar-volume
      initContainers:
      - command:
        - sh
        - -c
        - until result=$(mysql -h centralledger-mysql -P 3306 -u central_ledger
          --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from
          migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result
          ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting
          for MySQL; sleep 2; done;
        image: mysql:latest
        imagePullPolicy: Always
        name: wait-for-mysql
      - command:
        - sh
        - -c
        - until ./bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9092;
          do echo waiting for Kafka; sleep 2; done;
        image: solsson/kafka:latest
        imagePullPolicy: Always
        name: wait-for-kafka
      restartPolicy: Always
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: default.json
            path: default.json
          - key: knexfile.js
            path: knexfile.js
          name: centralledger-handler-timeout-config
        name: centralledger-handler-timeout-config-volume
      - configMap:
          defaultMode: 420
          items:
          - key: default.json
            path: default.json
          name: centralledger-handler-timeout-sidecar
        name: centralledger-handler-timeout-sidecar-volume
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: centralledger-handler-transfer-prepare
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    spec:
      containers:
        - command:
            - node
            - src/handlers/index.js
            - handler
            - --prepare
          env:
            - name: LOG_LEVEL
              value: info
            - name: LOG_FILTER
              value: error, warn, info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: audit:*, log:warn, log:error
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 'false'
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: 'false'
            - name: EVENT_SDK_SERVER_HOST
              value: localhost
            - name: EVENT_SDK_SERVER_PORT
              value: '50051'
            - name: EVENT_SDK_VENDOR_PREFIX
              value: mojaloop
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: 'true'
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: log,trace
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: 'false'
          image: mojaloop/central-ledger:v9.5.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
          name: centralledger-handler-transfer-prepare
          ports:
            - containerPort: 3001
              name: http-api
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
          volumeMounts:
            - mountPath: /opt/central-ledger/config
              name: centralledger-handler-transfer-prepare-config-volume
        - command:
            - npm
            - run
            - start
          env:
            - name: LOG_LEVEL
              value: info
            - name: LOG_FILTER
              value: error, warn, info
            - name: EVENT_SDK_LOG_FILTER
              value: audit:*, log:info, log:warn, log:error
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 'true'
          image: mojaloop/event-sidecar:v9.3.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 4001
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 15
          name: centralledger-handler-transfer-prepare-sidecar
          ports:
            - containerPort: 4001
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 4001
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 15
          volumeMounts:
            - mountPath: /opt/event-sidecar/config
              name: centralledger-handler-transfer-prepare-sidecar-volume
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - sh
            - -c
            - until result=$(mysql -h mysql -P 3306 -u central_ledger
              --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from
              migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result
              ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting
              for MySQL; sleep 2; done;
          image: mysql:latest
          imagePullPolicy: Always
          name: wait-for-mysql
        - command:
            - sh
            - -c
            - until ./bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9092;
              do echo waiting for Kafka; sleep 2; done;
          image: solsson/kafka:latest
          imagePullPolicy: Always
          name: wait-for-kafka
      restartPolicy: Always
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: default.json
                path: default.json
              - key: knexfile.js
                path: knexfile.js
            name: centralledger-handler-transfer-prepare-config
          name: centralledger-handler-transfer-prepare-config-volume
        - configMap:
            defaultMode: 420
            items:
              - key: default.json
                path: default.json
            name: centralledger-handler-transfer-prepare-sidecar
          name: centralledger-handler-transfer-prepare-sidecar-volume
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: centralledger-handler-transfer-position
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    spec:
      containers:
        - command:
            - node
            - src/handlers/index.js
            - handler
            - --position
          env:
            - name: LOG_LEVEL
              value: info
            - name: LOG_FILTER
              value: error, warn, info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: audit:*, log:warn, log:error
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 'false'
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: 'false'
            - name: EVENT_SDK_SERVER_HOST
              value: localhost
            - name: EVENT_SDK_SERVER_PORT
              value: '50051'
            - name: EVENT_SDK_VENDOR_PREFIX
              value: mojaloop
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: 'true'
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: log,trace
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: 'false'
          image: mojaloop/central-ledger:v9.5.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
          name: centralledger-handler-transfer-position
          ports:
            - containerPort: 3001
              name: http-api
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
          volumeMounts:
            - mountPath: /opt/central-ledger/config
              name: centralledger-handler-transfer-position-config-volume
        - command:
            - npm
            - run
            - start
          env:
            - name: LOG_LEVEL
              value: info
            - name: LOG_FILTER
              value: error, warn, info
            - name: EVENT_SDK_LOG_FILTER
              value: audit:*, log:info, log:warn, log:error
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 'true'
          image: mojaloop/event-sidecar:v9.3.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 4001
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 15
          name: centralledger-handler-transfer-position-sidecar
          ports:
            - containerPort: 4001
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 4001
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 15
          volumeMounts:
            - mountPath: /opt/event-sidecar/config
              name: centralledger-handler-transfer-position-sidecar-volum
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - sh
            - -c
            - until result=$(mysql -h mysql -P 3306 -u central_ledger
              --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from
              migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result
              ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting
              for MySQL; sleep 2; done;
          image: mysql:latest
          imagePullPolicy: Always
          name: wait-for-mysql
        - command:
            - sh
            - -c
            - until ./bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9092;
              do echo waiting for Kafka; sleep 2; done;
          image: solsson/kafka:latest
          imagePullPolicy: Always
          name: wait-for-kafka
      restartPolicy: Always
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: default.json
                path: default.json
              - key: knexfile.js
                path: knexfile.js
            name: centralledger-handler-transfer-position-config
          name: centralledger-handler-transfer-position-config-volume
        - configMap:
            defaultMode: 420
            items:
              - key: default.json
                path: default.json
            name: centralledger-handler-transfer-position-sidecar
          name: centralledger-handler-transfer-position-sidecar-volum
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: centralledger-handler-transfer-get
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    spec:
      containers:
        - command:
            - node
            - src/handlers/index.js
            - handler
            - --get
          env:
            - name: LOG_LEVEL
              value: info
            - name: LOG_FILTER
              value: error, warn, info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: audit:*, log:warn, log:error
            - name: EVENT_SDK_VENDOR_PREFIX
              value: mojaloop
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: 'true'
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: log,trace
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: 'false'
          image: mojaloop/central-ledger:v9.5.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
          name: centralledger-handler-transfer-get
          ports:
            - containerPort: 3001
              name: http-api
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
          volumeMounts:
            - mountPath: /opt/central-ledger/config
              name: centralledger-handler-transfer-get-config-volume
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - sh
            - -c
            - until result=$(mysql -h mysql -P 3306 -u central_ledger
              --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from
              migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result
              ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting
              for MySQL; sleep 2; done;
          image: mysql:latest
          imagePullPolicy: Always
          name: wait-for-mysql
        - command:
            - sh
            - -c
            - until ./bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9092;
              do echo waiting for Kafka; sleep 2; done;
          image: solsson/kafka:latest
          imagePullPolicy: Always
          name: wait-for-kafka
      restartPolicy: Always
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: default.json
                path: default.json
              - key: knexfile.js
                path: knexfile.js
            name: centralledger-handler-transfer-get-config
          name: centralledger-handler-transfer-get-config-volume
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: centralledger-handler-transfer-fulfil
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    spec:
      containers:
        - command:
            - node
            - src/handlers/index.js
            - handler
            - --fulfil
          env:
            - name: LOG_LEVEL
              value: info
            - name: LOG_FILTER
              value: error, warn, info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: audit:*, log:warn, log:error
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 'false'
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: 'false'
            - name: EVENT_SDK_SERVER_HOST
              value: localhost
            - name: EVENT_SDK_SERVER_PORT
              value: '50051'
            - name: EVENT_SDK_VENDOR_PREFIX
              value: mojaloop
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: 'true'
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: log,trace
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: 'false'
          image: mojaloop/central-ledger:v9.5.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
          name: centralledger-handler-transfer-fulfil
          ports:
            - containerPort: 3001
              name: http-api
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
          volumeMounts:
            - mountPath: /opt/central-ledger/config
              name: centralledger-handler-transfer-fulfil-config-volume
        - command:
            - npm
            - run
            - start
          env:
            - name: LOG_LEVEL
              value: info
            - name: LOG_FILTER
              value: error, warn, info
            - name: EVENT_SDK_LOG_FILTER
              value: audit:*, log:info, log:warn, log:error
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 'true'
          image: mojaloop/event-sidecar:v9.3.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 4001
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 15
          name: centralledger-handler-transfer-fulfil-sidecar
          ports:
            - containerPort: 4001
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 4001
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 15
          volumeMounts:
            - mountPath: /opt/event-sidecar/config
              name: centralledger-handler-transfer-fulfil-sidecar-volume
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - sh
            - -c
            - until result=$(mysql -h mysql -P 3306 -u central_ledger
              --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from
              migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result
              ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting
              for MySQL; sleep 2; done;
          image: mysql:latest
          imagePullPolicy: Always
          name: wait-for-mysql
        - command:
            - sh
            - -c
            - until ./bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9092;
              do echo waiting for Kafka; sleep 2; done;
          image: solsson/kafka:latest
          imagePullPolicy: Always
          name: wait-for-kafka
      restartPolicy: Always
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: default.json
                path: default.json
              - key: knexfile.js
                path: knexfile.js
            name: centralledger-handler-transfer-fulfil-config
          name: centralledger-handler-transfer-fulfil-config-volume
        - configMap:
            defaultMode: 420
            items:
              - key: default.json
                path: default.json
            name: centralledger-handler-transfer-fulfil-sidecar
          name: centralledger-handler-transfer-fulfil-sidecar-volume
