apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-position
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-position
    spec:
      containers:
        - command:
            - node
            - src/handlers/index.js
            - handler
            - --position
          env:
            - name: LOG_LEVEL
              value: info
            - name: LOG_FILTER
              value: error, warn, info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: audit:*, log:warn, log:error
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: localhost
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: mojaloop
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: log,trace
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          image: mojaloop/central-ledger:v9.5.0
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 15
          name: centralledger-handler-transfer-position
          ports:
            - containerPort: 3001
              name: http-api
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 15
          volumeMounts:
            - mountPath: /opt/central-ledger/config
              name: centralledger-handler-transfer-position-config-volume
        - command:
            - npm
            - run
            - start
          env:
            - name: LOG_LEVEL
              value: info
            - name: LOG_FILTER
              value: error, warn, info
            - name: EVENT_SDK_LOG_FILTER
              value: audit:*, log:info, log:warn, log:error
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
          image: mojaloop/event-sidecar:v9.3.0
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 15
          name: centralledger-handler-transfer-position-sidecar
          ports:
            - containerPort: 4001
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 15
          volumeMounts:
            - mountPath: /opt/event-sidecar/config
              name: centralledger-handler-transfer-position-sidecar-volum
      initContainers:
        - command:
            - sh
            - -c
            - until result=$(mysql -h mysql -P 3306 -u central_ledger
              --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from
              migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result
              ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting
              for MySQL; sleep 2; done;
          image: mysql:latest
          imagePullPolicy: Always
          name: wait-for-mysql
        - command:
            - sh
            - -c
            - until ./bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9092;
              do echo waiting for Kafka; sleep 2; done;
          image: solsson/kafka:latest
          imagePullPolicy: Always
          name: wait-for-kafka
      restartPolicy: Always
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: default.json
                path: default.json
              - key: knexfile.js
                path: knexfile.js
            name: centralledger-handler-transfer-position-config
          name: centralledger-handler-transfer-position-config-volume
        - configMap:
            defaultMode: 420
            items:
              - key: default.json
                path: default.json
            name: centralledger-handler-transfer-position-sidecar
          name: centralledger-handler-transfer-position-sidecar-volum
