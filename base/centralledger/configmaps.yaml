apiVersion: v1
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-admin-transfer.local\"\
    ,\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\"\
    : true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\"\
    : 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n\
    \        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"\
    DISABLED\": true,\n        \"HOST\": \"forensicloggingsidecar-ledger\",\n\
    \        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\"\
    : 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n       \
    \ \"HOST\": \"mysql\",\n        \"PORT\": 3306,\n        \"\
    USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"\
    SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\"\
    : 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\"\
    : 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\"\
    : true,\n        \"URI\": \"mongodb://centralledger-obj:27017/mlos\"\n  \
    \  },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n\
    \            \"DISABLED\": false\n        },\n        \"CRON\": {\n          \
    \  \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n        \
    \    \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"\
    DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"\
    TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"\
    METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n   \
    \             \"fspId\": \"*\"\n            },\n            \"config\": {\n  \
    \              \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n  \
    \              \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-admin-transfer\"\
    \n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"\
    user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\"\
    ,\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n    \
    \    \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n       \
    \     \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n\
    \            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\"\
    : \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"\
    MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\"\
    : {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\"\
    : {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n     \
    \       \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n\
    \        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-bulk-prepare\",\n       \
    \                     \"group.id\": \"cl-group-bulk-prepare\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"PROCESSING\": {\n                    \"config\": {\n\
    \                        \"options\": {\n                            \"mode\"\
    : 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-processing\",\n                      \
    \      \"group.id\": \"cl-group-bulk-processing\",\n                         \
    \   \"metadata.broker.list\": \"kafka:9092\",\n                         \
    \   \"socket.keepalive.enable\": true\n                        },\n          \
    \              \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"FULFIL\": {\n                    \"config\": {\n \
    \                       \"options\": {\n                            \"mode\":\
    \ 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-fulfil\",\n                          \
    \  \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"socket.keepalive.enable\"\
    : true\n                        },\n                        \"topicConf\": {\n\
    \                            \"auto.offset.reset\": \"earliest\"\n           \
    \             }\n                    }\n                }\n            },\n  \
    \          \"TRANSFER\": {\n                \"PREPARE\": {\n                 \
    \   \"config\": {\n                        \"options\": {\n                  \
    \          \"mode\": 2,\n                            \"batchSize\": 1,\n     \
    \                       \"pollFrequency\": 10,\n                            \"\
    recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\"\
    ,\n                            \"messageAsJSON\": true,\n                    \
    \        \"sync\": true,\n                            \"consumeTimeout\": 1000\n\
    \                        },\n                        \"rdkafkaConf\": {\n    \
    \                        \"client.id\": \"cl-con-transfer-prepare\",\n       \
    \                     \"group.id\": \"cl-group-transfer-prepare\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                },\n                \"POSITION\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-position\",\n  \
    \                          \"group.id\": \"cl-group-transfer-position\",\n   \
    \                         \"metadata.broker.list\": \"kafka:9092\",\n   \
    \                         \"socket.keepalive.enable\": true\n                \
    \        },\n                        \"topicConf\": {\n                      \
    \      \"auto.offset.reset\": \"earliest\"\n                        }\n      \
    \              }\n                },\n                \"FULFIL\": {\n        \
    \            \"config\": {\n                        \"options\": {\n         \
    \                   \"mode\": 2,\n                            \"batchSize\": 1,\n\
    \                            \"pollFrequency\": 10,\n                        \
    \    \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-fulfil\",\n    \
    \                        \"group.id\": \"cl-group-transfer-fulfil\",\n       \
    \                     \"metadata.broker.list\": \"kafka:9092\",\n       \
    \                     \"socket.keepalive.enable\": true\n                    \
    \    },\n                        \"topicConf\": {\n                          \
    \  \"auto.offset.reset\": \"earliest\"\n                        }\n          \
    \          }\n                },\n                \"GET\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-get\",\n       \
    \                     \"group.id\": \"cl-group-transfer-get\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-admin\",\n     \
    \                       \"group.id\": \"cl-group-transfer-admin\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                }\n            }\n        },\n        \"PRODUCER\": {\n\
    \            \"BULK\": {\n                \"PROCESSING\": {\n                \
    \    \"config\": {\n                        \"options\": {\n                 \
    \           \"messageCharset\": \"utf8\"\n                        },\n       \
    \                 \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"TRANSFER\"\
    : {\n                \"PREPARE\": {\n                    \"config\": {\n     \
    \                   \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                },\n                \"POSITION\": {\n \
    \                   \"config\": {\n                        \"options\": {\n  \
    \                          \"messageCharset\": \"utf8\"\n                    \
    \    },\n                        \"rdkafkaConf\": {\n                        \
    \    \"metadata.broker.list\": \"kafka:9092\",\n                        \
    \    \"client.id\": \"cl-prod-transfer-position\",\n                         \
    \   \"event_cb\": true,\n                            \"dr_cb\": false,\n     \
    \                       \"socket.keepalive.enable\": true,\n                 \
    \           \"queue.buffering.max.messages\": 10000000\n                     \
    \   },\n                        \"topicConf\": {\n                           \
    \ \"request.required.acks\": \"all\",\n                            \"partitioner\"\
    : \"murmur2_random\"\n                        }\n                    }\n     \
    \           },\n                \"FULFIL\": {\n                    \"config\"\
    : {\n                        \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n \
    \                           \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                },\n                \"GET\": {\n          \
    \          \"config\": {\n                        \"options\": {\n           \
    \                 \"messageCharset\": \"utf8\"\n                        },\n \
    \                       \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"NOTIFICATION\"\
    : {\n                \"EVENT\": {\n                    \"config\": {\n       \
    \                 \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-notification-event\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"ADMIN\"\
    : {\n                \"TRANSFER\": {\n                    \"config\": {\n    \
    \                    \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"admin-transfer-produce\",\n  \
    \                          \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\n\
    const seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\
    \nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n\
    \    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n\
    \        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n\
    \    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions:\
    \ ['.js']\n    }\n}"
kind: ConfigMap
metadata:
  name: centralledger-handler-admin-transfer-config
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer-config
---
apiVersion: v1
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-timeout.local\"\
    ,\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\"\
    : true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\"\
    : 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n\
    \        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"\
    DISABLED\": true,\n        \"HOST\": \"forensicloggingsidecar-ledger\",\n\
    \        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\"\
    : 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n       \
    \ \"HOST\": \"mysql\",\n        \"PORT\": 3306,\n        \"\
    USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"\
    SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\"\
    : 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\"\
    : 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\"\
    : true,\n        \"URI\": \"mongodb://centralledger-obj:27017/mlos\"\n  \
    \  },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n\
    \            \"DISABLED\": false\n        },\n        \"CRON\": {\n          \
    \  \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n        \
    \    \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"\
    DISABLED\": false,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"\
    TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"\
    METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n   \
    \             \"fspId\": \"*\"\n            },\n            \"config\": {\n  \
    \              \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n  \
    \              \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-timeout\"\
    \n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"\
    user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\"\
    ,\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n    \
    \    \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n       \
    \     \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n\
    \            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\"\
    : \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"\
    MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\"\
    : {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\"\
    : {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n     \
    \       \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n\
    \        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-bulk-prepare\",\n       \
    \                     \"group.id\": \"cl-group-bulk-prepare\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"PROCESSING\": {\n                    \"config\": {\n\
    \                        \"options\": {\n                            \"mode\"\
    : 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-processing\",\n                      \
    \      \"group.id\": \"cl-group-bulk-processing\",\n                         \
    \   \"metadata.broker.list\": \"kafka:9092\",\n                         \
    \   \"socket.keepalive.enable\": true\n                        },\n          \
    \              \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"FULFIL\": {\n                    \"config\": {\n \
    \                       \"options\": {\n                            \"mode\":\
    \ 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-fulfil\",\n                          \
    \  \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"socket.keepalive.enable\"\
    : true\n                        },\n                        \"topicConf\": {\n\
    \                            \"auto.offset.reset\": \"earliest\"\n           \
    \             }\n                    }\n                }\n            },\n  \
    \          \"TRANSFER\": {\n                \"PREPARE\": {\n                 \
    \   \"config\": {\n                        \"options\": {\n                  \
    \          \"mode\": 2,\n                            \"batchSize\": 1,\n     \
    \                       \"pollFrequency\": 10,\n                            \"\
    recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\"\
    ,\n                            \"messageAsJSON\": true,\n                    \
    \        \"sync\": true,\n                            \"consumeTimeout\": 1000\n\
    \                        },\n                        \"rdkafkaConf\": {\n    \
    \                        \"client.id\": \"cl-con-transfer-prepare\",\n       \
    \                     \"group.id\": \"cl-group-transfer-prepare\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                },\n                \"POSITION\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-position\",\n  \
    \                          \"group.id\": \"cl-group-transfer-position\",\n   \
    \                         \"metadata.broker.list\": \"kafka:9092\",\n   \
    \                         \"socket.keepalive.enable\": true\n                \
    \        },\n                        \"topicConf\": {\n                      \
    \      \"auto.offset.reset\": \"earliest\"\n                        }\n      \
    \              }\n                },\n                \"FULFIL\": {\n        \
    \            \"config\": {\n                        \"options\": {\n         \
    \                   \"mode\": 2,\n                            \"batchSize\": 1,\n\
    \                            \"pollFrequency\": 10,\n                        \
    \    \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-fulfil\",\n    \
    \                        \"group.id\": \"cl-group-transfer-fulfil\",\n       \
    \                     \"metadata.broker.list\": \"kafka:9092\",\n       \
    \                     \"socket.keepalive.enable\": true\n                    \
    \    },\n                        \"topicConf\": {\n                          \
    \  \"auto.offset.reset\": \"earliest\"\n                        }\n          \
    \          }\n                },\n                \"GET\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-get\",\n       \
    \                     \"group.id\": \"cl-group-transfer-get\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-admin\",\n     \
    \                       \"group.id\": \"cl-group-transfer-admin\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                }\n            }\n        },\n        \"PRODUCER\": {\n\
    \            \"BULK\": {\n                \"PROCESSING\": {\n                \
    \    \"config\": {\n                        \"options\": {\n                 \
    \           \"messageCharset\": \"utf8\"\n                        },\n       \
    \                 \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"TRANSFER\"\
    : {\n                \"PREPARE\": {\n                    \"config\": {\n     \
    \                   \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                },\n                \"POSITION\": {\n \
    \                   \"config\": {\n                        \"options\": {\n  \
    \                          \"messageCharset\": \"utf8\"\n                    \
    \    },\n                        \"rdkafkaConf\": {\n                        \
    \    \"metadata.broker.list\": \"kafka:9092\",\n                        \
    \    \"client.id\": \"cl-prod-transfer-position\",\n                         \
    \   \"event_cb\": true,\n                            \"dr_cb\": false,\n     \
    \                       \"socket.keepalive.enable\": true,\n                 \
    \           \"queue.buffering.max.messages\": 10000000\n                     \
    \   },\n                        \"topicConf\": {\n                           \
    \ \"request.required.acks\": \"all\",\n                            \"partitioner\"\
    : \"murmur2_random\"\n                        }\n                    }\n     \
    \           },\n                \"FULFIL\": {\n                    \"config\"\
    : {\n                        \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n \
    \                           \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                },\n                \"GET\": {\n          \
    \          \"config\": {\n                        \"options\": {\n           \
    \                 \"messageCharset\": \"utf8\"\n                        },\n \
    \                       \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"NOTIFICATION\"\
    : {\n                \"EVENT\": {\n                    \"config\": {\n       \
    \                 \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-notification-event\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"ADMIN\"\
    : {\n                \"TRANSFER\": {\n                    \"config\": {\n    \
    \                    \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"admin-transfer-produce\",\n  \
    \                          \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\n\
    const seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\
    \nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n\
    \    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n\
    \        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n\
    \    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions:\
    \ ['.js']\n    }\n}"
kind: ConfigMap
metadata:
  name: centralledger-handler-timeout-config
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout-config
---
apiVersion: v1
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\"\
    ,\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\"\
    : {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"\
    *\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\"\
    : \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-timeout-event-sidecar\"\
    \n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n\
    \      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\"\
    ,\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n \
    \     \"EVENT\": {\n        \"config\": {\n          \"options\": {\n        \
    \    \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n\
    \            \"metadata.broker.list\": \"kafka:9092\",\n            \"client.id\"\
    : \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\":\
    \ true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\"\
    : 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\"\
    : \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n   \
    \     }\n      }\n    }\n  }\n}\n"
kind: ConfigMap
metadata:
  name: centralledger-handler-timeout-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout-sidecar
---
apiVersion: v1
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-fulfil.local\"\
    ,\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\"\
    : true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\"\
    : 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n\
    \        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"\
    DISABLED\": true,\n        \"HOST\": \"test-forensicloggingsidecar-ledger\",\n\
    \        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\"\
    : 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n       \
    \ \"HOST\": \"mysql\",\n        \"PORT\": 3306,\n        \"\
    USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"\
    SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\"\
    : 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\"\
    : 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\"\
    : true,\n        \"URI\": \"mongodb://test-centralledger-obj:27017/mlos\"\n  \
    \  },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n\
    \            \"DISABLED\": false\n        },\n        \"CRON\": {\n          \
    \  \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n        \
    \    \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"\
    DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"\
    TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"\
    METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n  \
    \              \"fspId\": \"*\"\n            },\n            \"config\": {\n \
    \               \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n \
    \               \"defaultLabels\": {\n                    \"serviceName\": \"\
    central-handler-fulfil\"\n                }\n            }\n        }\n    },\n\
    \    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"\
    EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"\
    HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n       \
    \ \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\"\
    ,\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\"\
    : \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"\
    MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\"\
    : {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\"\
    : {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n     \
    \       \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n\
    \        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-bulk-prepare\",\n       \
    \                     \"group.id\": \"cl-group-bulk-prepare\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"PROCESSING\": {\n                    \"config\": {\n\
    \                        \"options\": {\n                            \"mode\"\
    : 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-processing\",\n                      \
    \      \"group.id\": \"cl-group-bulk-processing\",\n                         \
    \   \"metadata.broker.list\": \"kafka:9092\",\n                         \
    \   \"socket.keepalive.enable\": true\n                        },\n          \
    \              \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"FULFIL\": {\n                    \"config\": {\n \
    \                       \"options\": {\n                            \"mode\":\
    \ 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-fulfil\",\n                          \
    \  \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"socket.keepalive.enable\"\
    : true\n                        },\n                        \"topicConf\": {\n\
    \                            \"auto.offset.reset\": \"earliest\"\n           \
    \             }\n                    }\n                }\n            },\n  \
    \          \"TRANSFER\": {\n                \"PREPARE\": {\n                 \
    \   \"config\": {\n                        \"options\": {\n                  \
    \          \"mode\": 2,\n                            \"batchSize\": 1,\n     \
    \                       \"pollFrequency\": 10,\n                            \"\
    recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\"\
    ,\n                            \"messageAsJSON\": true,\n                    \
    \        \"sync\": true,\n                            \"consumeTimeout\": 1000\n\
    \                        },\n                        \"rdkafkaConf\": {\n    \
    \                        \"client.id\": \"cl-con-transfer-prepare\",\n       \
    \                     \"group.id\": \"cl-group-transfer-prepare\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                },\n                \"POSITION\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-position\",\n  \
    \                          \"group.id\": \"cl-group-transfer-position\",\n   \
    \                         \"metadata.broker.list\": \"kafka:9092\",\n   \
    \                         \"socket.keepalive.enable\": true\n                \
    \        },\n                        \"topicConf\": {\n                      \
    \      \"auto.offset.reset\": \"earliest\"\n                        }\n      \
    \              }\n                },\n                \"FULFIL\": {\n        \
    \            \"config\": {\n                        \"options\": {\n         \
    \                   \"mode\": 2,\n                            \"batchSize\": 1,\n\
    \                            \"pollFrequency\": 10,\n                        \
    \    \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-fulfil\",\n    \
    \                        \"group.id\": \"cl-group-transfer-fulfil\",\n       \
    \                     \"metadata.broker.list\": \"kafka:9092\",\n       \
    \                     \"socket.keepalive.enable\": true\n                    \
    \    },\n                        \"topicConf\": {\n                          \
    \  \"auto.offset.reset\": \"earliest\"\n                        }\n          \
    \          }\n                },\n                \"GET\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-get\",\n       \
    \                     \"group.id\": \"cl-group-transfer-get\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-admin\",\n     \
    \                       \"group.id\": \"cl-group-transfer-admin\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                }\n            }\n        },\n        \"PRODUCER\": {\n\
    \            \"BULK\": {\n                \"PROCESSING\": {\n                \
    \    \"config\": {\n                        \"options\": {\n                 \
    \           \"messageCharset\": \"utf8\"\n                        },\n       \
    \                 \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"TRANSFER\"\
    : {\n                \"PREPARE\": {\n                    \"config\": {\n     \
    \                   \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                },\n                \"POSITION\": {\n \
    \                   \"config\": {\n                        \"options\": {\n  \
    \                          \"messageCharset\": \"utf8\"\n                    \
    \    },\n                        \"rdkafkaConf\": {\n                        \
    \    \"metadata.broker.list\": \"kafka:9092\",\n                        \
    \    \"client.id\": \"cl-prod-transfer-position\",\n                         \
    \   \"event_cb\": true,\n                            \"dr_cb\": false,\n     \
    \                       \"socket.keepalive.enable\": true,\n                 \
    \           \"queue.buffering.max.messages\": 10000000\n                     \
    \   },\n                        \"topicConf\": {\n                           \
    \ \"request.required.acks\": \"all\",\n                            \"partitioner\"\
    : \"murmur2_random\"\n                        }\n                    }\n     \
    \           },\n                \"FULFIL\": {\n                    \"config\"\
    : {\n                        \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n \
    \                           \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                },\n                \"GET\": {\n          \
    \          \"config\": {\n                        \"options\": {\n           \
    \                 \"messageCharset\": \"utf8\"\n                        },\n \
    \                       \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"NOTIFICATION\"\
    : {\n                \"EVENT\": {\n                    \"config\": {\n       \
    \                 \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-notification-event\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"ADMIN\"\
    : {\n                \"TRANSFER\": {\n                    \"config\": {\n    \
    \                    \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"admin-transfer-produce\",\n  \
    \                          \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\n\
    const seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\
    \nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n\
    \    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n\
    \        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n\
    \    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions:\
    \ ['.js']\n    }\n}"
kind: ConfigMap
metadata:
  name: centralledger-handler-transfer-fulfil-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil-config
---
apiVersion: v1
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\"\
    ,\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\"\
    : {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"\
    *\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\"\
    : \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-fulfil-event-sidecar\"\
    \n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n\
    \      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\"\
    ,\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n \
    \     \"EVENT\": {\n        \"config\": {\n          \"options\": {\n        \
    \    \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n\
    \            \"metadata.broker.list\": \"kafka:9092\",\n            \"client.id\"\
    : \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\":\
    \ true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\"\
    : 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\"\
    : \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n   \
    \     }\n      }\n    }\n  }\n}\n"
kind: ConfigMap
metadata:
  name: centralledger-handler-transfer-fulfil-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil-sidecar
---
apiVersion: v1
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-get.local\"\
    ,\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\"\
    : true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\"\
    : 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n\
    \        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"\
    DISABLED\": true,\n        \"HOST\": \"test-forensicloggingsidecar-ledger\",\n\
    \        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\"\
    : 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n       \
    \ \"HOST\": \"mysql\",\n        \"PORT\": 3306,\n        \"\
    USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"\
    SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\"\
    : 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\"\
    : 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\"\
    : true,\n        \"URI\": \"mongodb://test-centralledger-obj:27017/mlos\"\n  \
    \  },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n\
    \            \"DISABLED\": false\n        },\n        \"CRON\": {\n          \
    \  \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n        \
    \    \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"\
    DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"\
    TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"\
    METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n   \
    \             \"fspId\": \"*\"\n            },\n            \"config\": {\n  \
    \              \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n  \
    \              \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-get\"\
    \n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"\
    user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\"\
    ,\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n    \
    \    \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n       \
    \     \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n\
    \            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\"\
    : \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"\
    MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\"\
    : {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\"\
    : {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n     \
    \       \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n\
    \        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-bulk-prepare\",\n       \
    \                     \"group.id\": \"cl-group-bulk-prepare\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"PROCESSING\": {\n                    \"config\": {\n\
    \                        \"options\": {\n                            \"mode\"\
    : 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-processing\",\n                      \
    \      \"group.id\": \"cl-group-bulk-processing\",\n                         \
    \   \"metadata.broker.list\": \"kafka:9092\",\n                         \
    \   \"socket.keepalive.enable\": true\n                        },\n          \
    \              \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"FULFIL\": {\n                    \"config\": {\n \
    \                       \"options\": {\n                            \"mode\":\
    \ 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-fulfil\",\n                          \
    \  \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"socket.keepalive.enable\"\
    : true\n                        },\n                        \"topicConf\": {\n\
    \                            \"auto.offset.reset\": \"earliest\"\n           \
    \             }\n                    }\n                }\n            },\n  \
    \          \"TRANSFER\": {\n                \"PREPARE\": {\n                 \
    \   \"config\": {\n                        \"options\": {\n                  \
    \          \"mode\": 2,\n                            \"batchSize\": 1,\n     \
    \                       \"pollFrequency\": 10,\n                            \"\
    recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\"\
    ,\n                            \"messageAsJSON\": true,\n                    \
    \        \"sync\": true,\n                            \"consumeTimeout\": 1000\n\
    \                        },\n                        \"rdkafkaConf\": {\n    \
    \                        \"client.id\": \"cl-con-transfer-prepare\",\n       \
    \                     \"group.id\": \"cl-group-transfer-prepare\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                },\n                \"POSITION\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-position\",\n  \
    \                          \"group.id\": \"cl-group-transfer-position\",\n   \
    \                         \"metadata.broker.list\": \"kafka:9092\",\n   \
    \                         \"socket.keepalive.enable\": true\n                \
    \        },\n                        \"topicConf\": {\n                      \
    \      \"auto.offset.reset\": \"earliest\"\n                        }\n      \
    \              }\n                },\n                \"FULFIL\": {\n        \
    \            \"config\": {\n                        \"options\": {\n         \
    \                   \"mode\": 2,\n                            \"batchSize\": 1,\n\
    \                            \"pollFrequency\": 10,\n                        \
    \    \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-fulfil\",\n    \
    \                        \"group.id\": \"cl-group-transfer-fulfil\",\n       \
    \                     \"metadata.broker.list\": \"kafka:9092\",\n       \
    \                     \"socket.keepalive.enable\": true\n                    \
    \    },\n                        \"topicConf\": {\n                          \
    \  \"auto.offset.reset\": \"earliest\"\n                        }\n          \
    \          }\n                },\n                \"GET\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-get\",\n       \
    \                     \"group.id\": \"cl-group-transfer-get\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-admin\",\n     \
    \                       \"group.id\": \"cl-group-transfer-admin\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                }\n            }\n        },\n        \"PRODUCER\": {\n\
    \            \"BULK\": {\n                \"PROCESSING\": {\n                \
    \    \"config\": {\n                        \"options\": {\n                 \
    \           \"messageCharset\": \"utf8\"\n                        },\n       \
    \                 \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"TRANSFER\"\
    : {\n                \"PREPARE\": {\n                    \"config\": {\n     \
    \                   \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                },\n                \"POSITION\": {\n \
    \                   \"config\": {\n                        \"options\": {\n  \
    \                          \"messageCharset\": \"utf8\"\n                    \
    \    },\n                        \"rdkafkaConf\": {\n                        \
    \    \"metadata.broker.list\": \"kafka:9092\",\n                        \
    \    \"client.id\": \"cl-prod-transfer-position\",\n                         \
    \   \"event_cb\": true,\n                            \"dr_cb\": false,\n     \
    \                       \"socket.keepalive.enable\": true,\n                 \
    \           \"queue.buffering.max.messages\": 10000000\n                     \
    \   },\n                        \"topicConf\": {\n                           \
    \ \"request.required.acks\": \"all\",\n                            \"partitioner\"\
    : \"murmur2_random\"\n                        }\n                    }\n     \
    \           },\n                \"FULFIL\": {\n                    \"config\"\
    : {\n                        \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n \
    \                           \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                },\n                \"GET\": {\n          \
    \          \"config\": {\n                        \"options\": {\n           \
    \                 \"messageCharset\": \"utf8\"\n                        },\n \
    \                       \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"NOTIFICATION\"\
    : {\n                \"EVENT\": {\n                    \"config\": {\n       \
    \                 \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-notification-event\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"ADMIN\"\
    : {\n                \"TRANSFER\": {\n                    \"config\": {\n    \
    \                    \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"admin-transfer-produce\",\n  \
    \                          \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\n\
    const seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\
    \nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n\
    \    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n\
    \        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n\
    \    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions:\
    \ ['.js']\n    }\n}"
kind: ConfigMap
metadata:
  name: centralledger-handler-transfer-get-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get-config
---
apiVersion: v1
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-position.local\"\
    ,\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\"\
    : true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\"\
    : 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n\
    \        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"\
    DISABLED\": true,\n        \"HOST\": \"test-forensicloggingsidecar-ledger\",\n\
    \        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\"\
    : 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n       \
    \ \"HOST\": \"mysql\",\n        \"PORT\": 3306,\n        \"\
    USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"\
    SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\"\
    : 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\"\
    : 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\"\
    : true,\n        \"URI\": \"mongodb://test-centralledger-obj:27017/mlos\"\n  \
    \  },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n\
    \            \"DISABLED\": false\n        },\n        \"CRON\": {\n          \
    \  \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n        \
    \    \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"\
    DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"\
    TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"\
    METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n  \
    \              \"fspId\": \"*\"\n            },\n            \"config\": {\n \
    \               \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n \
    \               \"defaultLabels\": {\n                    \"serviceName\": \"\
    central-handler-position\"\n                }\n            }\n        }\n    },\n\
    \    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"\
    EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"\
    HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n       \
    \ \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\"\
    ,\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\"\
    : \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"\
    MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\"\
    : {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\"\
    : {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n     \
    \       \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n\
    \        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-bulk-prepare\",\n       \
    \                     \"group.id\": \"cl-group-bulk-prepare\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"PROCESSING\": {\n                    \"config\": {\n\
    \                        \"options\": {\n                            \"mode\"\
    : 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-processing\",\n                      \
    \      \"group.id\": \"cl-group-bulk-processing\",\n                         \
    \   \"metadata.broker.list\": \"kafka:9092\",\n                         \
    \   \"socket.keepalive.enable\": true\n                        },\n          \
    \              \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"FULFIL\": {\n                    \"config\": {\n \
    \                       \"options\": {\n                            \"mode\":\
    \ 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-fulfil\",\n                          \
    \  \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"socket.keepalive.enable\"\
    : true\n                        },\n                        \"topicConf\": {\n\
    \                            \"auto.offset.reset\": \"earliest\"\n           \
    \             }\n                    }\n                }\n            },\n  \
    \          \"TRANSFER\": {\n                \"PREPARE\": {\n                 \
    \   \"config\": {\n                        \"options\": {\n                  \
    \          \"mode\": 2,\n                            \"batchSize\": 1,\n     \
    \                       \"pollFrequency\": 10,\n                            \"\
    recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\"\
    ,\n                            \"messageAsJSON\": true,\n                    \
    \        \"sync\": true,\n                            \"consumeTimeout\": 1000\n\
    \                        },\n                        \"rdkafkaConf\": {\n    \
    \                        \"client.id\": \"cl-con-transfer-prepare\",\n       \
    \                     \"group.id\": \"cl-group-transfer-prepare\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                },\n                \"POSITION\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-position\",\n  \
    \                          \"group.id\": \"cl-group-transfer-position\",\n   \
    \                         \"metadata.broker.list\": \"kafka:9092\",\n   \
    \                         \"socket.keepalive.enable\": true\n                \
    \        },\n                        \"topicConf\": {\n                      \
    \      \"auto.offset.reset\": \"earliest\"\n                        }\n      \
    \              }\n                },\n                \"FULFIL\": {\n        \
    \            \"config\": {\n                        \"options\": {\n         \
    \                   \"mode\": 2,\n                            \"batchSize\": 1,\n\
    \                            \"pollFrequency\": 10,\n                        \
    \    \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-fulfil\",\n    \
    \                        \"group.id\": \"cl-group-transfer-fulfil\",\n       \
    \                     \"metadata.broker.list\": \"kafka:9092\",\n       \
    \                     \"socket.keepalive.enable\": true\n                    \
    \    },\n                        \"topicConf\": {\n                          \
    \  \"auto.offset.reset\": \"earliest\"\n                        }\n          \
    \          }\n                },\n                \"GET\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-get\",\n       \
    \                     \"group.id\": \"cl-group-transfer-get\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-admin\",\n     \
    \                       \"group.id\": \"cl-group-transfer-admin\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                }\n            }\n        },\n        \"PRODUCER\": {\n\
    \            \"BULK\": {\n                \"PROCESSING\": {\n                \
    \    \"config\": {\n                        \"options\": {\n                 \
    \           \"messageCharset\": \"utf8\"\n                        },\n       \
    \                 \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"TRANSFER\"\
    : {\n                \"PREPARE\": {\n                    \"config\": {\n     \
    \                   \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                },\n                \"POSITION\": {\n \
    \                   \"config\": {\n                        \"options\": {\n  \
    \                          \"messageCharset\": \"utf8\"\n                    \
    \    },\n                        \"rdkafkaConf\": {\n                        \
    \    \"metadata.broker.list\": \"kafka:9092\",\n                        \
    \    \"client.id\": \"cl-prod-transfer-position\",\n                         \
    \   \"event_cb\": true,\n                            \"dr_cb\": false,\n     \
    \                       \"socket.keepalive.enable\": true,\n                 \
    \           \"queue.buffering.max.messages\": 10000000\n                     \
    \   },\n                        \"topicConf\": {\n                           \
    \ \"request.required.acks\": \"all\",\n                            \"partitioner\"\
    : \"murmur2_random\"\n                        }\n                    }\n     \
    \           },\n                \"FULFIL\": {\n                    \"config\"\
    : {\n                        \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n \
    \                           \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                },\n                \"GET\": {\n          \
    \          \"config\": {\n                        \"options\": {\n           \
    \                 \"messageCharset\": \"utf8\"\n                        },\n \
    \                       \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"NOTIFICATION\"\
    : {\n                \"EVENT\": {\n                    \"config\": {\n       \
    \                 \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-notification-event\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"ADMIN\"\
    : {\n                \"TRANSFER\": {\n                    \"config\": {\n    \
    \                    \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"admin-transfer-produce\",\n  \
    \                          \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\n\
    const seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\
    \nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n\
    \    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n\
    \        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n\
    \    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions:\
    \ ['.js']\n    }\n}"
kind: ConfigMap
metadata:
  name: centralledger-handler-transfer-position-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position-config
---
apiVersion: v1
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\"\
    ,\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\"\
    : {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"\
    *\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\"\
    : \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-position-event-sidecar\"\
    \n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n\
    \      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\"\
    ,\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n \
    \     \"EVENT\": {\n        \"config\": {\n          \"options\": {\n        \
    \    \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n\
    \            \"metadata.broker.list\": \"kafka:9092\",\n            \"client.id\"\
    : \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\":\
    \ true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\"\
    : 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\"\
    : \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n   \
    \     }\n      }\n    }\n  }\n}\n"
kind: ConfigMap
metadata:
  name: centralledger-handler-transfer-position-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position-sidecar
---
apiVersion: v1
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-prepare.local\"\
    ,\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\"\
    : true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\"\
    : 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n\
    \        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"\
    DISABLED\": true,\n        \"HOST\": \"test-forensicloggingsidecar-ledger\",\n\
    \        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\"\
    : 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n       \
    \ \"HOST\": \"mysql\",\n        \"PORT\": 3306,\n        \"\
    USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"\
    SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\"\
    : 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\"\
    : 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\"\
    : true,\n        \"URI\": \"mongodb://test-centralledger-obj:27017/mlos\"\n  \
    \  },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n\
    \            \"DISABLED\": false\n        },\n        \"CRON\": {\n          \
    \  \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n        \
    \    \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"\
    DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"\
    TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"\
    METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n  \
    \              \"fspId\": \"*\"\n            },\n            \"config\": {\n \
    \               \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n \
    \               \"defaultLabels\": {\n                    \"serviceName\": \"\
    central-handler-prepare\"\n                }\n            }\n        }\n    },\n\
    \    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"\
    EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"\
    HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n       \
    \ \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\"\
    ,\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\"\
    : \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"\
    MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\"\
    : {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\"\
    : {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n     \
    \       \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n\
    \        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-bulk-prepare\",\n       \
    \                     \"group.id\": \"cl-group-bulk-prepare\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"PROCESSING\": {\n                    \"config\": {\n\
    \                        \"options\": {\n                            \"mode\"\
    : 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-processing\",\n                      \
    \      \"group.id\": \"cl-group-bulk-processing\",\n                         \
    \   \"metadata.broker.list\": \"kafka:9092\",\n                         \
    \   \"socket.keepalive.enable\": true\n                        },\n          \
    \              \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"FULFIL\": {\n                    \"config\": {\n \
    \                       \"options\": {\n                            \"mode\":\
    \ 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-fulfil\",\n                          \
    \  \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"socket.keepalive.enable\"\
    : true\n                        },\n                        \"topicConf\": {\n\
    \                            \"auto.offset.reset\": \"earliest\"\n           \
    \             }\n                    }\n                }\n            },\n  \
    \          \"TRANSFER\": {\n                \"PREPARE\": {\n                 \
    \   \"config\": {\n                        \"options\": {\n                  \
    \          \"mode\": 2,\n                            \"batchSize\": 1,\n     \
    \                       \"pollFrequency\": 10,\n                            \"\
    recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\"\
    ,\n                            \"messageAsJSON\": true,\n                    \
    \        \"sync\": true,\n                            \"consumeTimeout\": 1000\n\
    \                        },\n                        \"rdkafkaConf\": {\n    \
    \                        \"client.id\": \"cl-con-transfer-prepare\",\n       \
    \                     \"group.id\": \"cl-group-transfer-prepare\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                },\n                \"POSITION\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-position\",\n  \
    \                          \"group.id\": \"cl-group-transfer-position\",\n   \
    \                         \"metadata.broker.list\": \"kafka:9092\",\n   \
    \                         \"socket.keepalive.enable\": true\n                \
    \        },\n                        \"topicConf\": {\n                      \
    \      \"auto.offset.reset\": \"earliest\"\n                        }\n      \
    \              }\n                },\n                \"FULFIL\": {\n        \
    \            \"config\": {\n                        \"options\": {\n         \
    \                   \"mode\": 2,\n                            \"batchSize\": 1,\n\
    \                            \"pollFrequency\": 10,\n                        \
    \    \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-fulfil\",\n    \
    \                        \"group.id\": \"cl-group-transfer-fulfil\",\n       \
    \                     \"metadata.broker.list\": \"kafka:9092\",\n       \
    \                     \"socket.keepalive.enable\": true\n                    \
    \    },\n                        \"topicConf\": {\n                          \
    \  \"auto.offset.reset\": \"earliest\"\n                        }\n          \
    \          }\n                },\n                \"GET\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-get\",\n       \
    \                     \"group.id\": \"cl-group-transfer-get\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-admin\",\n     \
    \                       \"group.id\": \"cl-group-transfer-admin\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                }\n            }\n        },\n        \"PRODUCER\": {\n\
    \            \"BULK\": {\n                \"PROCESSING\": {\n                \
    \    \"config\": {\n                        \"options\": {\n                 \
    \           \"messageCharset\": \"utf8\"\n                        },\n       \
    \                 \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"TRANSFER\"\
    : {\n                \"PREPARE\": {\n                    \"config\": {\n     \
    \                   \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                },\n                \"POSITION\": {\n \
    \                   \"config\": {\n                        \"options\": {\n  \
    \                          \"messageCharset\": \"utf8\"\n                    \
    \    },\n                        \"rdkafkaConf\": {\n                        \
    \    \"metadata.broker.list\": \"kafka:9092\",\n                        \
    \    \"client.id\": \"cl-prod-transfer-position\",\n                         \
    \   \"event_cb\": true,\n                            \"dr_cb\": false,\n     \
    \                       \"socket.keepalive.enable\": true,\n                 \
    \           \"queue.buffering.max.messages\": 10000000\n                     \
    \   },\n                        \"topicConf\": {\n                           \
    \ \"request.required.acks\": \"all\",\n                            \"partitioner\"\
    : \"murmur2_random\"\n                        }\n                    }\n     \
    \           },\n                \"FULFIL\": {\n                    \"config\"\
    : {\n                        \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n \
    \                           \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                },\n                \"GET\": {\n          \
    \          \"config\": {\n                        \"options\": {\n           \
    \                 \"messageCharset\": \"utf8\"\n                        },\n \
    \                       \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"NOTIFICATION\"\
    : {\n                \"EVENT\": {\n                    \"config\": {\n       \
    \                 \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-notification-event\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"ADMIN\"\
    : {\n                \"TRANSFER\": {\n                    \"config\": {\n    \
    \                    \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"admin-transfer-produce\",\n  \
    \                          \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\n\
    const seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\
    \nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n\
    \    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n\
    \        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n\
    \    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions:\
    \ ['.js']\n    }\n}"
kind: ConfigMap
metadata:
  name: centralledger-handler-transfer-prepare-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare-config
---
apiVersion: v1
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\"\
    ,\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\"\
    : {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"\
    *\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\"\
    : \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-prepare-event-sidecar\"\
    \n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n\
    \      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\"\
    ,\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n \
    \     \"EVENT\": {\n        \"config\": {\n          \"options\": {\n        \
    \    \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n\
    \            \"metadata.broker.list\": \"kafka:9092\",\n            \"client.id\"\
    : \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\":\
    \ true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\"\
    : 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\"\
    : \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n   \
    \     }\n      }\n    }\n  }\n}\n"
kind: ConfigMap
metadata:
  name: centralledger-handler-transfer-prepare-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare-sidecar
---
apiVersion: v1
data:
  node.cnf: '[mysqld]

    datadir=/var/lib/mysql

    default_storage_engine=InnoDB

    binlog_format=ROW

    innodb_flush_log_at_trx_commit  = 0

    innodb_flush_method             = O_DIRECT

    innodb_file_per_table           = 1

    innodb_autoinc_lock_mode=2

    bind_address = 0.0.0.0

    wsrep_slave_threads=2

    wsrep_cluster_address=gcomm://

    wsrep_provider=/usr/lib/galera3/libgalera_smm.so

    wsrep_cluster_name=galera

    wsrep_sst_method=xtrabackup-v2

    pxc_strict_mode=DISABLED

    '
kind: ConfigMap
metadata:
  name: centralledger-mysql-config-files
  labels:
    app.kubernetes.io/name: centralledger-mysql-config-files
---
apiVersion: v1
data:
  entrypoint.sh: "#!/bin/bash\nset -e\n\nif [[ -n \"${DEBUG}\" ]]; then\n    set -x\n\
    fi\n\n. /startup-scripts/functions.sh\n\nipaddr=$(hostname -i | awk ' { print\
    \ $1 } ')\nhostname=$(hostname)\necho \"I AM $hostname - $ipaddr\"\n\n# if command\
    \ starts with an option, prepend mysqld\nif [ \"${1:0:1}\" = '-' ]; then\n   \
    \ CMDARG=\"$@\"\nfi\n\ncluster_join=$(resolveip -s \"${K8S_SERVICE_NAME}\" ||\
    \ echo \"\")\nif [[ -z \"${cluster_join}\" ]]; then\n    echo \"I am the Primary\
    \ Node\"\n    init_mysql\n    write_password_file\n    exec mysqld --user=mysql\
    \ --wsrep_cluster_name=$SHORT_CLUSTER_NAME --wsrep_node_name=$hostname \\\n  \
    \  --wsrep_cluster_address=gcomm:// --wsrep_sst_method=xtrabackup-v2 \\\n    --wsrep_sst_auth=\"\
    xtrabackup:$XTRABACKUP_PASSWORD\" \\\n    --wsrep_node_address=\"$ipaddr\" --pxc_strict_mode=\"\
    $PXC_STRICT_MODE\" $CMDARG\nelse\n    echo \"I am not the Primary Node\"\n   \
    \ chown -R mysql:mysql /var/lib/mysql || true # default is root:root 777\n   \
    \ touch /var/log/mysqld.log\n    chown mysql:mysql /var/log/mysqld.log\n    write_password_file\n\
    \    exec mysqld --user=mysql --wsrep_cluster_name=$SHORT_CLUSTER_NAME --wsrep_node_name=$hostname\
    \ \\\n    --wsrep_cluster_address=\"gcomm://$cluster_join\" --wsrep_sst_method=xtrabackup-v2\
    \ \\\n    --wsrep_sst_auth=\"xtrabackup:$XTRABACKUP_PASSWORD\" \\\n    --wsrep_node_address=\"\
    $ipaddr\" --pxc_strict_mode=\"$PXC_STRICT_MODE\" $CMDARG\nfi\n"
  functions.sh: "#!/bin/bash\n\nwrite_password_file() {\nif [[ -n \"${MYSQL_ROOT_PASSWORD}\"\
    \ ]]; then\n    cat <<EOF > /root/.my.cnf\n    [client]\n    user=root\n    password=${MYSQL_ROOT_PASSWORD}\n\
    EOF\nfi\n}\n\ninit_mysql() {\nDATADIR=/var/lib/mysql\n# if we have CLUSTER_JOIN\
    \ - then we do not need to perform datadir initialize\n# the data will be copied\
    \ from another node\nif [ ! -e \"$DATADIR/mysql\" ]; then\n    if [ -z \"$MYSQL_ROOT_PASSWORD\"\
    \ -a -z \"$MYSQL_ALLOW_EMPTY_PASSWORD\" -a -z \"$MYSQL_RANDOM_ROOT_PASSWORD\"\
    \ -a -z \"$MYSQL_ROOT_PASSWORD_FILE\" ]; then\n                        echo >&2\
    \ 'error: database is uninitialized and password option is not specified '\n \
    \                       echo >&2 '  You need to specify one of MYSQL_ROOT_PASSWORD,\
    \ MYSQL_ROOT_PASSWORD_FILE,  MYSQL_ALLOW_EMPTY_PASSWORD or MYSQL_RANDOM_ROOT_PASSWORD'\n\
    \                        exit 1\n                fi\n\n    if [ ! -z \"$MYSQL_ROOT_PASSWORD_FILE\"\
    \ -a -z \"$MYSQL_ROOT_PASSWORD\" ]; then\n    MYSQL_ROOT_PASSWORD=$(cat $MYSQL_ROOT_PASSWORD_FILE)\n\
    \    fi\n    mkdir -p \"$DATADIR\"\n\n    echo \"Running --initialize-insecure\
    \ on $DATADIR\"\n    ls -lah $DATADIR\n    if [ \"$PERCONA_MAJOR\" = \"5.6\" ];\
    \ then\n        mysql_install_db --user=mysql --datadir=\"$DATADIR\"\n    else\n\
    \        mysqld --user=mysql --datadir=\"$DATADIR\" --initialize-insecure\n  \
    \  fi\n    chown -R mysql:mysql \"$DATADIR\" || true # default is root:root 777\n\
    \    if [ -f /var/log/mysqld.log ]; then\n        chown mysql:mysql /var/log/mysqld.log\n\
    \    fi\n    echo 'Finished --initialize-insecure'\n\n    mysqld --user=mysql\
    \ --datadir=\"$DATADIR\" --skip-networking &\n    pid=\"$!\"\n\n    mysql=( mysql\
    \ --protocol=socket -uroot )\n\n    for i in {30..0}; do\n    if echo 'SELECT\
    \ 1' | \"${mysql[@]}\" &> /dev/null; then\n        break\n    fi\n    echo 'MySQL\
    \ init process in progress...'\n    sleep 1\n    done\n    if [ \"$i\" = 0 ];\
    \ then\n    echo >&2 'MySQL init process failed.'\n    exit 1\n    fi\n\n    #\
    \ sed is for https://bugs.mysql.com/bug.php?id=20545\n    mysql_tzinfo_to_sql\
    \ /usr/share/zoneinfo | sed 's/Local time zone must be set--see zic manual page/FCTY/'\
    \ | \"${mysql[@]}\" mysql\n    \"${mysql[@]}\" <<-EOSQL\n    -- What's done in\
    \ this file shouldn't be replicated\n    --  or products like mysql-fabric won't\
    \ work\n    SET @@SESSION.SQL_LOG_BIN=0;\n    CREATE USER 'root'@'${ALLOW_ROOT_FROM}'\
    \ IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}' ;\n    GRANT ALL ON *.* TO 'root'@'${ALLOW_ROOT_FROM}'\
    \ WITH GRANT OPTION ;\n    GRANT ALL ON *.* TO 'root'@'localhost' WITH GRANT OPTION\
    \ ;\n    CREATE USER 'xtrabackup'@'localhost' IDENTIFIED BY '$XTRABACKUP_PASSWORD';\n\
    \    GRANT RELOAD,PROCESS,LOCK TABLES,REPLICATION CLIENT ON *.* TO 'xtrabackup'@'localhost';\n\
    \    GRANT REPLICATION CLIENT ON *.* TO monitor@'%' IDENTIFIED BY 'monitor';\n\
    \    GRANT PROCESS ON *.* TO monitor@localhost IDENTIFIED BY 'monitor';\n    CREATE\
    \ USER 'mysql'@'localhost' IDENTIFIED BY '' ;\n    DROP DATABASE IF EXISTS test\
    \ ;\n    FLUSH PRIVILEGES ;\nEOSQL\n\n    if [ \"$PERCONA_MAJOR\" = \"5.6\" ];\
    \ then\n        echo \"SET PASSWORD FOR 'root'@'localhost' = PASSWORD('${MYSQL_ROOT_PASSWORD}');\
    \ FLUSH PRIVILEGES;\" | \"${mysql[@]}\"\n    else\n        echo \"ALTER USER 'root'@'localhost'\
    \ IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}'; FLUSH PRIVILEGES;\" | \"${mysql[@]}\"\
    \n    fi\n\n    if [ ! -z \"$MYSQL_ROOT_PASSWORD\" ]; then\n    mysql+=( -p\"\
    ${MYSQL_ROOT_PASSWORD}\" )\n    fi\n\n    if [ \"$MYSQL_DATABASE\" ]; then\n \
    \   echo \"CREATE DATABASE IF NOT EXISTS \\`$MYSQL_DATABASE\\` ;\" | \"${mysql[@]}\"\
    \n    mysql+=( \"$MYSQL_DATABASE\" )\n    fi\n\n    if [ \"$MYSQL_USER\" -a \"\
    $MYSQL_PASSWORD\" ]; then\n    echo \"CREATE USER '\"$MYSQL_USER\"'@'%' IDENTIFIED\
    \ BY '\"$MYSQL_PASSWORD\"' ;\" | \"${mysql[@]}\"\n\n    if [ \"$MYSQL_DATABASE\"\
    \ ]; then\n        echo \"GRANT ALL ON \\`\"$MYSQL_DATABASE\"\\`.* TO '\"$MYSQL_USER\"\
    '@'%' ;\" | \"${mysql[@]}\"\n    fi\n\n    echo 'FLUSH PRIVILEGES ;' | \"${mysql[@]}\"\
    \n    fi\n\n    if [ ! -z \"$MYSQL_ONETIME_PASSWORD\" ]; then\n    \"${mysql[@]}\"\
    \ <<-EOSQL\n        ALTER USER 'root'@'%' PASSWORD EXPIRE;\nEOSQL\n    fi\n  \
    \  if ! kill -s TERM \"$pid\" || ! wait \"$pid\"; then\n    echo >&2 'MySQL init\
    \ process failed.'\n    exit 1\n    fi\n\n    echo\n    echo 'MySQL init process\
    \ done. Ready for start up.'\n    echo\nfi\n\n}\n"
kind: ConfigMap
metadata:
  name: centralledger-mysql-startup-scripts
  labels:
    app.kubernetes.io/name: centralledger-mysql-startup-scripts
---
apiVersion: v1
data:
  run.sh: 'echo "Testing Percona XtraDB Cluster"

    creds="-uroot -p${MYSQL_ROOT_PASSWORD} -h mysql"

    echo "==> basic mysql ping"

    mysqladmin $creds ping

    [[ $? != "0" ]] && exit $?

    echo "==> test basic query"

    mysql $creds -e "select now() \G"

    [[ $? != "0" ]] && exit $?

    echo "==> checking if cluster is ready"

    mysql $creds -e "SHOW GLOBAL STATUS LIKE ''wsrep_ready'' \G" | grep Value | awk
    ''{ print $2}'' | grep ON

    [[ $? != "0" ]] && exit $?

    echo "==> checking if cluster size matches replica count"

    cluster_size=$(mysql $creds -e "SHOW GLOBAL STATUS LIKE ''wsrep_cluster_size''
    \G" | grep Value | awk ''{ print $2}'')

    [[ $? != "0" ]] && exit $?

    [[ "${cluster_size}" == "1" ]] || exit 1

    echo "SUCCESS"

    exit 0'
kind: ConfigMap
metadata:
  name: centralledger-mysql-tests
  labels:
    app.kubernetes.io/name: centralledger-mysql-tests
---
apiVersion: v1
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger.local\"\
    ,\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\"\
    : true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\"\
    : 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n\
    \        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"\
    DISABLED\": true,\n        \"HOST\": \"test-forensicloggingsidecar-ledger\",\n\
    \        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\"\
    : 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n       \
    \ \"HOST\": \"mysql\",\n        \"PORT\": 3306,\n        \"\
    USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"\
    SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\"\
    : 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\"\
    : 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\"\
    : 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\"\
    : true,\n        \"URI\": \"mongodb://test-centralledger-obj:27017/mlos\"\n  \
    \  },\n    \"HANDLERS\": {\n        \"DISABLED\": true,\n        \"API\": {\n\
    \            \"DISABLED\": false\n        },\n        \"CRON\": {\n          \
    \  \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n        \
    \    \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"\
    DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"\
    TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"\
    METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n  \
    \              \"fspId\": \"*\"\n            },\n            \"config\": {\n \
    \               \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n \
    \               \"defaultLabels\": {\n                    \"serviceName\": \"\
    central-service\"\n                }\n            }\n        }\n    },\n    \"\
    EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\"\
    : \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\"\
    : {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n\
    \            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\"\
    ,\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\"\
    : \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"\
    MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\"\
    : {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\"\
    : {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n     \
    \       \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\"\
    ,\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n\
    \        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-bulk-prepare\",\n       \
    \                     \"group.id\": \"cl-group-bulk-prepare\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"PROCESSING\": {\n                    \"config\": {\n\
    \                        \"options\": {\n                            \"mode\"\
    : 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-processing\",\n                      \
    \      \"group.id\": \"cl-group-bulk-processing\",\n                         \
    \   \"metadata.broker.list\": \"kafka:9092\",\n                         \
    \   \"socket.keepalive.enable\": true\n                        },\n          \
    \              \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     },\n                \"FULFIL\": {\n                    \"config\": {\n \
    \                       \"options\": {\n                            \"mode\":\
    \ 2,\n                            \"batchSize\": 1,\n                        \
    \    \"pollFrequency\": 10,\n                            \"recursiveTimeout\"\
    : 100,\n                            \"messageCharset\": \"utf8\",\n          \
    \                  \"messageAsJSON\": true,\n                            \"sync\"\
    : true,\n                            \"consumeTimeout\": 1000\n              \
    \          },\n                        \"rdkafkaConf\": {\n                  \
    \          \"client.id\": \"cl-con-bulk-fulfil\",\n                          \
    \  \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"socket.keepalive.enable\"\
    : true\n                        },\n                        \"topicConf\": {\n\
    \                            \"auto.offset.reset\": \"earliest\"\n           \
    \             }\n                    }\n                }\n            },\n  \
    \          \"TRANSFER\": {\n                \"PREPARE\": {\n                 \
    \   \"config\": {\n                        \"options\": {\n                  \
    \          \"mode\": 2,\n                            \"batchSize\": 1,\n     \
    \                       \"pollFrequency\": 10,\n                            \"\
    recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\"\
    ,\n                            \"messageAsJSON\": true,\n                    \
    \        \"sync\": true,\n                            \"consumeTimeout\": 1000\n\
    \                        },\n                        \"rdkafkaConf\": {\n    \
    \                        \"client.id\": \"cl-con-transfer-prepare\",\n       \
    \                     \"group.id\": \"cl-group-transfer-prepare\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                },\n                \"POSITION\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-position\",\n  \
    \                          \"group.id\": \"cl-group-transfer-position\",\n   \
    \                         \"metadata.broker.list\": \"kafka:9092\",\n   \
    \                         \"socket.keepalive.enable\": true\n                \
    \        },\n                        \"topicConf\": {\n                      \
    \      \"auto.offset.reset\": \"earliest\"\n                        }\n      \
    \              }\n                },\n                \"FULFIL\": {\n        \
    \            \"config\": {\n                        \"options\": {\n         \
    \                   \"mode\": 2,\n                            \"batchSize\": 1,\n\
    \                            \"pollFrequency\": 10,\n                        \
    \    \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-fulfil\",\n    \
    \                        \"group.id\": \"cl-group-transfer-fulfil\",\n       \
    \                     \"metadata.broker.list\": \"kafka:9092\",\n       \
    \                     \"socket.keepalive.enable\": true\n                    \
    \    },\n                        \"topicConf\": {\n                          \
    \  \"auto.offset.reset\": \"earliest\"\n                        }\n          \
    \          }\n                },\n                \"GET\": {\n               \
    \     \"config\": {\n                        \"options\": {\n                \
    \            \"mode\": 2,\n                            \"batchSize\": 1,\n   \
    \                         \"pollFrequency\": 10,\n                           \
    \ \"recursiveTimeout\": 100,\n                            \"messageCharset\":\
    \ \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-get\",\n       \
    \                     \"group.id\": \"cl-group-transfer-get\",\n             \
    \               \"metadata.broker.list\": \"kafka:9092\",\n             \
    \               \"socket.keepalive.enable\": true\n                        },\n\
    \                        \"topicConf\": {\n                            \"auto.offset.reset\"\
    : \"earliest\"\n                        }\n                    }\n           \
    \     }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\"\
    : {\n                    \"config\": {\n                        \"options\": {\n\
    \                            \"mode\": 2,\n                            \"batchSize\"\
    : 1,\n                            \"pollFrequency\": 10,\n                   \
    \         \"recursiveTimeout\": 100,\n                            \"messageCharset\"\
    : \"utf8\",\n                            \"messageAsJSON\": true,\n          \
    \                  \"sync\": true,\n                            \"consumeTimeout\"\
    : 1000\n                        },\n                        \"rdkafkaConf\": {\n\
    \                            \"client.id\": \"cl-con-transfer-admin\",\n     \
    \                       \"group.id\": \"cl-group-transfer-admin\",\n         \
    \                   \"metadata.broker.list\": \"kafka:9092\",\n         \
    \                   \"socket.keepalive.enable\": true\n                      \
    \  },\n                        \"topicConf\": {\n                            \"\
    auto.offset.reset\": \"earliest\"\n                        }\n               \
    \     }\n                }\n            }\n        },\n        \"PRODUCER\": {\n\
    \            \"BULK\": {\n                \"PROCESSING\": {\n                \
    \    \"config\": {\n                        \"options\": {\n                 \
    \           \"messageCharset\": \"utf8\"\n                        },\n       \
    \                 \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"TRANSFER\"\
    : {\n                \"PREPARE\": {\n                    \"config\": {\n     \
    \                   \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                },\n                \"POSITION\": {\n \
    \                   \"config\": {\n                        \"options\": {\n  \
    \                          \"messageCharset\": \"utf8\"\n                    \
    \    },\n                        \"rdkafkaConf\": {\n                        \
    \    \"metadata.broker.list\": \"kafka:9092\",\n                        \
    \    \"client.id\": \"cl-prod-transfer-position\",\n                         \
    \   \"event_cb\": true,\n                            \"dr_cb\": false,\n     \
    \                       \"socket.keepalive.enable\": true,\n                 \
    \           \"queue.buffering.max.messages\": 10000000\n                     \
    \   },\n                        \"topicConf\": {\n                           \
    \ \"request.required.acks\": \"all\",\n                            \"partitioner\"\
    : \"murmur2_random\"\n                        }\n                    }\n     \
    \           },\n                \"FULFIL\": {\n                    \"config\"\
    : {\n                        \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n \
    \                           \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                },\n                \"GET\": {\n          \
    \          \"config\": {\n                        \"options\": {\n           \
    \                 \"messageCharset\": \"utf8\"\n                        },\n \
    \                       \"rdkafkaConf\": {\n                            \"metadata.broker.list\"\
    : \"kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\"\
    ,\n                            \"event_cb\": true,\n                         \
    \   \"dr_cb\": false,\n                            \"socket.keepalive.enable\"\
    : true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"NOTIFICATION\"\
    : {\n                \"EVENT\": {\n                    \"config\": {\n       \
    \                 \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"cl-prod-notification-event\",\n\
    \                            \"event_cb\": true,\n                           \
    \ \"dr_cb\": false,\n                            \"socket.keepalive.enable\":\
    \ true,\n                            \"queue.buffering.max.messages\": 10000000\n\
    \                        },\n                        \"topicConf\": {\n      \
    \                      \"request.required.acks\": \"all\",\n                 \
    \           \"partitioner\": \"murmur2_random\"\n                        }\n \
    \                   }\n                }\n            },\n            \"ADMIN\"\
    : {\n                \"TRANSFER\": {\n                    \"config\": {\n    \
    \                    \"options\": {\n                            \"messageCharset\"\
    : \"utf8\"\n                        },\n                        \"rdkafkaConf\"\
    : {\n                            \"metadata.broker.list\": \"kafka:9092\"\
    ,\n                            \"client.id\": \"admin-transfer-produce\",\n  \
    \                          \"event_cb\": true,\n                            \"\
    dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n\
    \                            \"queue.buffering.max.messages\": 10000000\n    \
    \                    },\n                        \"topicConf\": {\n          \
    \                  \"request.required.acks\": \"all\",\n                     \
    \       \"partitioner\": \"murmur2_random\"\n                        }\n     \
    \               }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\n\
    const seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\
    \nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n\
    \    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n\
    \        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n\
    \    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions:\
    \ ['.js']\n    }\n}"
kind: ConfigMap
metadata:
  name: centralledger-service-config
  labels:
    app.kubernetes.io/name: centralledger-service-config
